{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employees/employee-list/employee-list.component.css","webpack:///./src/app/employees/employee-list/employee-list.component.html","webpack:///./src/app/employees/employee-list/employee-list.component.ts","webpack:///./src/app/employees/employee/employee.component.css","webpack:///./src/app/employees/employee/employee.component.html","webpack:///./src/app/employees/employee/employee.component.ts","webpack:///./src/app/employees/employees.component.css","webpack:///./src/app/employees/employees.component.html","webpack:///./src/app/employees/employees.component.ts","webpack:///./src/app/employees/shared/employee.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n  <app-employees></app-employees>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { EmployeeComponent } from './employees/employee/employee.component';\nimport { EmployeeListComponent } from './employees/employee-list/employee-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeesComponent,\n    EmployeeComponent,\n    EmployeeListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ToastrModule.forRoot(),\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<table class=\\\"table table-sm table-hover\\\">\\n  <tr *ngFor=\\\"let employee of employeeService.employeeList\\\">\\n    <td>{{employee.FirstName}} - {{employee.LastName}}</td>\\n    <td>{{employee.EmpCode}}</td>\\n    <td>\\n      <a class=\\\"btn\\\" (click)=\\\"showForEdit(employee)\\\">\\n        <i class=\\\"fa fa-pencil-square-o\\\"></i>\\n      </a>\\n      <a class=\\\"btn text-danger\\\" (click)=\\\"onDelete(employee.EmployeeID)\\\">\\n        <i class=\\\"fa fa-trash-o\\\"></i>\\n      </a>\\n    </td>\\n  </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\n\nimport { EmployeeService } from '../shared/employee.service';\nimport { Employee } from '../shared/employee.model';\nimport { ToastrService } from 'ngx-toastr';    \n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\n\nexport class EmployeeListComponent implements OnInit {\n \n  constructor(private employeeService: EmployeeService,private toastr : ToastrService) { }\n \n  ngOnInit() {\n    this.employeeService.getEmployeeList();\n  }\n \n  showForEdit(emp: Employee) {\n    this.employeeService.selectedEmployee = Object.assign({}, emp);;\n  }\n\n  onDelete(id: number) {\n    if (confirm('Are you sure to delete this record ?') == true) {\n      this.employeeService.deleteEmployee(id)\n      .subscribe(x => {\n        this.employeeService.getEmployeeList();\n        this.toastr.warning(\"Deleted Successfully\",\"Employee Register\");\n      })\n    }\n  }\n}","module.exports = \"\"","module.exports = \"\\n<form class=\\\"emp-form\\\" #employeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(employeeForm)\\\">\\n  <input type=\\\"hidden\\\" name=\\\"EmployeeID\\\" #EmployeeID=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.EmployeeID\\\">\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-6\\\">\\n      <input class=\\\"form-control\\\" name=\\\"FirstName\\\" #FirstName=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.FirstName\\\"\\n        placeholder=\\\"First Name\\\" required>\\n      <div class=\\\"validation-error\\\" *ngIf=\\\"FirstName.invalid && FirstName.touched\\\">This Field is Required.</div>\\n    </div>\\n    <div class=\\\"form-group col-md-6\\\">\\n      <input class=\\\"form-control\\\" name=\\\"LastName\\\" #LastName=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.LastName\\\" placeholder=\\\"Last Name\\\"\\n        required>\\n      <div class=\\\"validation-error\\\" *ngIf=\\\"LastName.invalid && LastName.touched\\\">This Field is Required.</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input class=\\\"form-control\\\" name=\\\"Position\\\" #Position=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.Position\\\" placeholder=\\\"Position\\\">\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-6\\\">\\n      <input class=\\\"form-control\\\" name=\\\"EmpCode\\\" #EmpCode=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.EmpCode\\\" placeholder=\\\"Emp Code\\\">\\n    </div>\\n    <div class=\\\"form-group col-md-6\\\">\\n      <input class=\\\"form-control\\\" name=\\\"Office\\\" #Office=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.Office\\\" placeholder=\\\"Office\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-8\\\">\\n      <button [disabled]=\\\"!employeeForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-info\\\">\\n        <i class=\\\"fa fa-floppy-o\\\"></i> Submit</button>\\n    </div>\\n    <div class=\\\"form-group col-md-4\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-lg btn-block btn-secondary\\\" (click)=\\\"resetForm(employeeForm)\\\">\\n        <i class=\\\"fa fa-repeat\\\"></i> Reset</button>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { EmployeeService } from '../shared/employee.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor(private employeeService: EmployeeService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.reset();\n    this.employeeService.selectedEmployee = {\n      EmployeeID: null,\n      FirstName: '',\n      LastName: '',\n      EmpCode: '',\n      Position: '',\n      Office: ''\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.EmployeeID == null) {\n      this.employeeService.postEmployee(form.value)\n        .subscribe(data => {\n          this.resetForm(form);\n          this.employeeService.getEmployeeList();\n          this.toastr.success('New Record Added Succcessfully', 'Employee Register');\n        })\n    }\n    else {\n      this.employeeService.putEmployee(form.value.EmployeeID, form.value)\n      .subscribe(data => {\n        this.resetForm(form);\n        this.employeeService.getEmployeeList();\n        this.toastr.info('Record Updated Successfully!', 'Employee Register');\n      });\n    }\n  }\n}","module.exports = \"\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n  <h2 class=\\\"jumbotron bg-secondary text-white\\\">Employee Register</h2>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <app-employee></app-employee>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <app-employee-list></app-employee-list>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from './shared/employee.service'\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css'],\n  providers: [EmployeeService]\n})\nexport class EmployeesComponent implements OnInit {\n\n  constructor(private employeeService : EmployeeService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions, RequestMethod } from '@angular/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {Employee} from'./employee.model'\n\n@Injectable()\nexport class EmployeeService {\n  selectedEmployee : Employee;\n  employeeList : Employee[];\n  constructor(private http : Http) { }\n\n  postEmployee(emp : Employee){\n    var body = JSON.stringify(emp);\n    var headerOptions = new Headers({'Content-Type':'application/json'});\n    var requestOptions = new RequestOptions({method : RequestMethod.Post,headers : headerOptions});\n    return this.http.post('http://localhost:50539/api/Employee',body,requestOptions).pipe(map(x => x.json()));\n  }\n\n  putEmployee(id, emp) {\n    var body = JSON.stringify(emp);\n    var headerOptions = new Headers({ 'Content-Type': 'application/json' });\n    var requestOptions = new RequestOptions({ method: RequestMethod.Put, headers: headerOptions });\n    return this.http.put('http://localhost:50539/api/Employee/' + id,\n      body,\n      requestOptions).pipe(map(res => res.json()));\n  }\n\n  getEmployeeList(){\n    this.http.get('http://localhost:50539/api/Employee')\n    .pipe(map((data : Response) =>{\n      return data.json() as Employee[];\n    })).toPromise().then(x => {\n      this.employeeList = x;\n    })\n  }\n\n  deleteEmployee(id: number) {\n    return this.http.delete('http://localhost:50539/api/Employee/' + id).pipe(map(res => res.json()));\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}